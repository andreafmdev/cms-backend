import {
  CreateDateColumn,
  UpdateDateColumn,
  DeleteDateColumn,
  Column,
  PrimaryGeneratedColumn,
  BaseEntity,
} from 'typeorm';

export abstract class BaseOrmEntity extends BaseEntity {
  @CreateDateColumn({ type: 'timestamptz', comment: 'Creation date' }) // Usa timestamp con fuso orario
  createdAt!: Date; // Data di creazione

  @UpdateDateColumn({ type: 'timestamptz', comment: 'Last update date' })
  updatedAt!: Date; // Data di ultima modifica

  @DeleteDateColumn({
    type: 'timestamptz',
    nullable: true,
    comment: 'Deletion date',
  })
  deletedAt?: Date; // Data di soft delete the entity was soft-deleted (if applicable)

  @Column({ type: 'uuid', nullable: true, comment: 'Created by user UUID' })
  createdBy?: string; // UUID dell'utente che ha creato l'entità

  @Column({ type: 'uuid', nullable: true, comment: 'Updated by user UUID' })
  updatedBy?: string; // UUID dell'utente che ha modificato l'entità

  @Column({ type: 'uuid', nullable: true, comment: 'Deleted by user UUID' })
  deletedBy?: string; // UUID dell'utente che ha eliminato l'entità (soft delete)
  @PrimaryGeneratedColumn('uuid') // UUID generated by typeorm
  id!: string;
}
