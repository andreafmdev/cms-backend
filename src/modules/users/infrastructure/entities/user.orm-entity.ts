import {
  Entity,
  Column,
  ManyToMany,
  JoinTable,
  OneToOne,
  JoinColumn,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { GroupOrmEntity } from './group.orm-entity';
import { BaseOrmEntity } from '@base/infrastructure/entities/base.orm';
import { UserDetailOrmEntity } from './user-detail.orm-entity';
@Entity('users') // Table name
export class UserOrmEntity extends BaseOrmEntity {
  @PrimaryGeneratedColumn('uuid') // UUID generated by typeorm
  id!: string;
  @Column({ unique: true })
  username!: string;

  @Column({ unique: true })
  email!: string;

  @Column()
  password!: string;

  @Column({ default: false })
  isEmailVerified!: boolean;

  @Column({ default: false })
  isActive!: boolean;

  @ManyToMany(() => GroupOrmEntity, (group) => group.users, {
    cascade: true,
    eager: true,
  })
  @JoinTable({ name: 'user_groups' }) // Join table for user-group relationships
  groups!: GroupOrmEntity[];

  @OneToOne(() => UserDetailOrmEntity, {
    cascade: true,
    eager: true,
  })
  @JoinColumn({ name: 'details_id' }) // Nome della colonna FK in `users`
  details?: UserDetailOrmEntity;

  @Column({ nullable: true })
  lastLogin?: Date;
}
